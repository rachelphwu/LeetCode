class Solution {
    public int maxProfit(int[] prices) {
        /*
              price of a given stock on ith day = index
            maximize profit by choosing a single day to buy one stoc
            different day in the future to sell that stock
        */
        
        //the simplest way is check for lowest number then check for the highest number
        
      if(prices.length == 1) return 0;
      if(prices.length > 1000000) return 1;
      if(prices.length == 2) {
          final int prof = prices[1] > prices[0] 
          ? prices[1] - prices[0] 
          : 0;
          System.out.println("Two");
          return prof;
        } 
        

      int minVal = Integer.MAX_VALUE;
      int profit = 0;

      //keep track of smallest number encountered and keep calculating max profit
      //if new smallest number is encountered then update min value and keep calculating max profit

        for(int i = 0; i < prices.length; i++){
            //checks if current value is the smallest value then resumes search
           minVal = Math.min(minVal, prices[i]);
          //  System.out.println(minVal);
           //profit is i - min
           int temp = prices[i] - minVal;
          //  System.out.println(temp);
           //if higher profit is found then update profit value
           profit = Math.max(temp, profit);
          //  System.out.println(profit);
        }
           
        
        return profit;
    }
}